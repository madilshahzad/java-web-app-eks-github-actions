name: Main Workflow

on:
  push:
    branches:
      - feature-1

jobs:
  trigger_child_workflows:
    runs-on: ubuntu-latest

    steps:
      - name: Build and Deploy
        id: trigger_build_deploy
        run: |
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/madilshahzad/Build-Deploy/actions/workflows/build-deploy.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "DOCKERFILE_PATH": "./Dockerfile",
                "CONTEXT_PATH": ".",
                "APP_NAME": "java-web-app"
              }
            }')

          # Sleep for a short period to allow the workflow to start
          sleep 10

          # Get the workflow run ID of the triggered workflow
          run_id=$(curl -s \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/madilshahzad/Build-Deploy/actions/runs \
            | jq -r '.workflow_runs[] | select(.head_branch=="main") | .id' | head -n 1)

          echo "run_id_build_deploy=${run_id}" >> $GITHUB_ENV

      - name: Provision Infrastructure
        id: trigger_provision_infra
        run: |
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/madilshahzad/Provision-Infrastructure/actions/workflows/provision-infra.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "TF_ENVIRONMENT": "prod"
              }
            }')

          # Sleep for a short period to allow the workflow to start
          sleep 10

          # Get the workflow run ID of the triggered workflow
          run_id=$(curl -s \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/madilshahzad/Provision-Infrastructure/actions/runs \
            | jq -r '.workflow_runs[] | select(.head_branch=="main") | .id' | head -n 1)

          echo "run_id_provision_infra=${run_id}" >> $GITHUB_ENV

  monitor_child_workflows:
    runs-on: ubuntu-latest
    needs: trigger_child_workflows
    steps:
      - name: Monitor Build and Deploy
        run: |
          status="in_progress"
          while [[ "$status" == "in_progress" || "$status" == "queued" ]]; do
            echo "Polling Build and Deploy workflow status..."
            response=$(curl -s \
              -H "Authorization: token ${{ secrets.PAT }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/madilshahzad/Build-Deploy/actions/runs/${{ env.run_id_build_deploy }})
            
            status=$(echo "$response" | jq -r '.status')
            conclusion=$(echo "$response" | jq -r '.conclusion')

            echo "Current status: $status"
            [[ "$status" == "completed" ]] && break
            sleep 10
          done

          echo "Build and Deploy workflow completed with conclusion: $conclusion"
          if [[ "$conclusion" != "success" ]]; then
            echo "Build and Deploy workflow failed!"
            exit 1
          fi

      - name: Monitor Provision Infrastructure
        run: |
          status="in_progress"
          while [[ "$status" == "in_progress" || "$status" == "queued" ]]; do
            echo "Polling Provision Infrastructure workflow status..."
            response=$(curl -s \
              -H "Authorization: token ${{ secrets.PAT }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/madilshahzad/Provision-Infrastructure/actions/runs/${{ env.run_id_provision_infra }})
            
            status=$(echo "$response" | jq -r '.status')
            conclusion=$(echo "$response" | jq -r '.conclusion')

            echo "Current status: $status"
            [[ "$status" == "completed" ]] && break
            sleep 10
          done

          echo "Provision Infrastructure workflow completed with conclusion: $conclusion"
          if [[ "$conclusion" != "success" ]]; then
            echo "Provision Infrastructure workflow failed!"
            exit 1
          fi
